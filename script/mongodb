#!/bin/bash
# Usage:
# mongodb        <== start mongodb service for app
# mongodb stop   <== stop mongodb service for app

APP=${0##*/}
APP_PATH=${0%/${APP}}
if [ "${APP_PATH}" == "." ]; then
    APP_PATH="$(pwd)"
fi
SCRIPT_FOLDER=${APP_PATH##*/}  # Script's parent folder name
BASE=$(echo "${APP_PATH}/../" | sed -e "s#^${SCRIPT_FOLDER}/../##g" -e "s#/${SCRIPT_FOLDER}/../#/#g" -e "s#//#/#g")
source ${BASE}${SCRIPT_FOLDER}/conf.inc
source ${BASE}${SCRIPT_FOLDER}/func.inc

PARA=${1}
CMD="mongod --port ${MONGO_PORT}"
LOGFILE="${BASE}${LOGS_FOLDER}/mongodb.log"
DATA_FOLDER_FULL="${BASE}${DATA_FOLDER}"
EXIST=$(app_already_running ${CMD})
if [ "${PARA}" == "stop" ]; then
    if [ "${EXIST}" == "0" ]; then
        echo "[Ok] MongoDB already terminated."
    else
        PID=$(ps aux | grep "${CMD}" | grep -v grep | awk '{print $2}')
        kill -TERM ${PID}
        echo "[Ok] MongoDB stopped."
    fi
else
    if [ "${EXIST}" == "0" ]; then
        (${CMD} --dbpath ${DATA_FOLDER_FULL} --logpath ${LOGFILE} --logappend &)
        echo "[Ok] MongoDB started. Log write to ${LOGFILE}"
    else
        echo "[Ok] MongoDB already running. Log write to ${LOGFILE}"
    fi
fi
